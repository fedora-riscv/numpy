diff -up numpy-1.7.0b1/numpy/core/tests/test_multiarray.py.orig numpy-1.7.0b1/numpy/core/tests/test_multiarray.py
--- numpy-1.7.0b1/numpy/core/tests/test_multiarray.py.orig	2012-08-12 21:53:17.000000000 -0600
+++ numpy-1.7.0b1/numpy/core/tests/test_multiarray.py	2012-08-21 16:36:35.123297576 -0600
@@ -23,6 +23,15 @@ from numpy.testing import (
 from datetime import timedelta
 
 
+if sys.version_info[:2] > (3, 2):
+    # In Python 3.3 the representation of empty shape, strides and suboffsets
+    # is an empty tuple instead of None.
+    # http://docs.python.org/dev/whatsnew/3.3.html#api-changes
+    EMPTY = ()
+else:    
+    EMPTY = None
+
+
 class TestFlags(TestCase):
     def setUp(self):
         self.a = arange(10)
@@ -2640,7 +2649,7 @@ if sys.version_info >= (2, 6):
             assert_equal(y.shape, (5,))
             assert_equal(y.ndim, 1)
             assert_equal(y.strides, (4,))
-            assert_equal(y.suboffsets, None)
+            assert_equal(y.suboffsets, EMPTY)
             assert_equal(y.itemsize, 4)
 
         def test_export_simple_nd(self):
@@ -2650,7 +2659,7 @@ if sys.version_info >= (2, 6):
             assert_equal(y.shape, (2, 2))
             assert_equal(y.ndim, 2)
             assert_equal(y.strides, (16, 8))
-            assert_equal(y.suboffsets, None)
+            assert_equal(y.suboffsets, EMPTY)
             assert_equal(y.itemsize, 8)
 
         def test_export_discontiguous(self):
@@ -2660,7 +2669,7 @@ if sys.version_info >= (2, 6):
             assert_equal(y.shape, (3, 3))
             assert_equal(y.ndim, 2)
             assert_equal(y.strides, (36, 4))
-            assert_equal(y.suboffsets, None)
+            assert_equal(y.suboffsets, EMPTY)
             assert_equal(y.itemsize, 4)
 
         def test_export_record(self):
@@ -2693,7 +2702,7 @@ if sys.version_info >= (2, 6):
             y = memoryview(x)
             assert_equal(y.shape, (1,))
             assert_equal(y.ndim, 1)
-            assert_equal(y.suboffsets, None)
+            assert_equal(y.suboffsets, EMPTY)
 
             sz = sum([dtype(b).itemsize for a, b in dt])
             if dtype('l').itemsize == 4:
@@ -2707,10 +2716,10 @@ if sys.version_info >= (2, 6):
             x = np.array(([[1,2],[3,4]],), dtype=[('a', ('i', (2,2)))])
             y = memoryview(x)
             assert_equal(y.format, 'T{(2,2)i:a:}')
-            assert_equal(y.shape, None)
+            assert_equal(y.shape, EMPTY)
             assert_equal(y.ndim, 0)
-            assert_equal(y.strides, None)
-            assert_equal(y.suboffsets, None)
+            assert_equal(y.strides, EMPTY)
+            assert_equal(y.suboffsets, EMPTY)
             assert_equal(y.itemsize, 16)
 
         def test_export_endian(self):
